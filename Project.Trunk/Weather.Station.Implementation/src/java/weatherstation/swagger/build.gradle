group 'weather.pi'
version '0.0.1'

apply plugin: 'groovy'
apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'io.swagger:swagger-codegen-cli:2.2.0'
    compile 'org.ajoberstar:gradle-git:1.1.0'
}

task swaggerNode(type: JavaExec, description: "Generate nodejs server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "nodejs-server",
            "-i", "weather.sensors.yaml",
            "-o", "./generated"
}

task swaggerClj(type: JavaExec, description: "Generate Clojure server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "clojure",
            "-i", "weather.sensors.yaml",
            "-o", "./generated"
}

task swaggerJaxRS(type: JavaExec, description: "Generate JAX-RS server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "jaxrs",
            "-i", "weather.sensors.yaml",
            "-o", "./generated"
}

task swaggerGO(type: JavaExec, description: "Generate GO server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "go-server",
            "-i", "weather.sensors.yaml",
            "-o", "./generated"
}

task swaggerScala(type: JavaExec, description: "Generate GO server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "scalatra",
            "-i", "weather.sensors.yaml",
            "-o", "./generated"
}
