plugins {
    id 'java'
    id 'groovy'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}

shadowJar {
    zip64 true
}

group = 'oliv.raspi.coffee'
version = '1.0'


sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
    }
    test {
        java {
            srcDir 'tests/java'
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://oss.sonatype.org/content/groups/public" }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'io.swagger:swagger-codegen-cli:2.2.0'
    compile 'org.ajoberstar:gradle-git:1.1.0'
    compile project(':ADC')
}

task swaggerNode(type: JavaExec, description: "Generate nodejs server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "nodejs-server",
            "-i", "sensors.yaml",
            "-o", "./generated/node"
}

task swaggerClj(type: JavaExec, description: "Generate Clojure server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "clojure",
            "-i", "sensors.yaml",
            "-o", "./generated/clj"
}

task swaggerJaxRS(type: JavaExec, description: "Generate JAX-RS server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "jaxrs",
            "-i", "sensors.yaml",
            "-o", "./generated/jaxrs"
}

task swaggerGO(type: JavaExec, description: "Generate GO server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "go-server",
            "-i", "sensors.yaml",
            "-o", "./generated/go"
}

task swaggerScala(type: JavaExec, description: "Generate GO server code for the weather station") {
    classpath = configurations.runtime
    main = 'io.swagger.codegen.SwaggerCodegen'
    args "generate",
            "-l", "scalatra",
            "-i", "sensors.yaml",
            "-o", "./generated/scala"
}
