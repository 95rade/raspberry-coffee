plugins {
  id 'java'
//id 'scala'
  id 'maven'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
}


//def userprofile = System.getenv()['USERPROFILE'] // On Windows...
//if (userprofile == null) { // Linux ?
//  userprofile = System.getenv()['HOME']
//}

group = 'oliv.pi4j.samples'
version = '1.0'

// ant.setproxy(proxyhost: "$proxyHost", proxyport: "$proxyPort") //, proxyuser="user", proxypassword="password") 

sourceSets {
  main {
    java {
      srcDir 'src/java'
    }
  }  
  test {
    java {
      srcDir 'tests/java'
    }
  }  
}

repositories {
  mavenCentral()
  mavenLocal()
  maven { url "https://oss.sonatype.org/content/groups/public" }
}

dependencies {
  compile 'com.pi4j:pi4j-core:1.2-SNAPSHOT'
  compile 'org.fusesource.jansi:jansi:1.11'
//compile 'oliv.cool.stuff:javanauticalalmanac:4.0.0.0' // For the astgronomical calculus
  compile project(':SunFlower') // For the Servo Board (PCA9685) and the LSM303
  compile project (':NMEA.multiplexer') // For the NMEA Parser (GPS Strings)
}

task copyResources(type: Copy) {
  description = 'Copies non-java resources in the output directory before the jar task (png, xml, xsd, ttf, properties, etc)'
  from 'src'
  into 'build/classes/main'
  include '**/*.xml', '**/*.xsd', '**/*.png', '**/*.gif', '**/*.jpg', '**/*.properties', '**/*.ttf', '**/*.html'
}

shadowJar {
  zip64 true
}

jar.dependsOn(copyResources)

//task tellMeProxy (description: "Spits out the proxy settings.") << {
//  println "Accessing resources with proxy $proxyHost:$proxyPort"
//  println "UserProfile: " + System.getenv()['USERPROFILE']
//}

// compileJava.dependsOn(tellMeProxy)
