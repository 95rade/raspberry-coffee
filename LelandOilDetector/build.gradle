plugins {
  id 'java'
  id 'maven'
  id 'com.moowork.node' version '0.10'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
}

shadowJar {
  zip64 true
}

def userprofile = System.getenv()['USERPROFILE'] // On Windows...
if (userprofile == null) { // Linux ?
  userprofile = System.getenv()['HOME']
}

group = 'oliv.pi4j.samples'
version = '1.0'

// ant.setproxy(proxyhost: "$proxyHost", proxyport: "$proxyPort") //, proxyuser="user", proxypassword="password") 

sourceSets {
  main {
    java {
      srcDir 'src'
    }
  }  
  test {
    java {
      srcDir 'tests'
    }
  }  
}

repositories {
  mavenCentral()
  maven { url "http://lediouris.net/maven2" }
  mavenLocal()
}

dependencies {
  compile 'com.pi4j:pi4j-core:0.0.5'
  compile 'org.fusesource.jansi:jansi:1.11'
  compile 'org.json:json:20141113'
  compile project(':I2C.SPI')
  compile project(':FONA')
  compile project(':ADC')
  compile project(':RangeSensor')
}

task copyResources(type: Copy) {
  description = 'Copies non-java resources in the output directory before the jar task (png, xml, xsd, ttf, properties, etc)'
  from 'src'
  into 'build/classes/main'
  include '**/*.xml', '**/*.xsd', '**/*.png', '**/*.gif', '**/*.jpg', '**/*.properties', '**/*.ttf', '**/*.html'
}

jar.dependsOn(copyResources)

task tellMeProxy (description: "Spits out the proxy settings.") << {
  println "Accessing resources with proxy $proxyHost:$proxyPort"
  println "UserProfile: " + System.getenv()['USERPROFILE']
}

// compileJava.dependsOn(tellMeProxy)

task runNodeServer(type: NodeTask) {
  script = file('./node/server.js')
//args = ['&']
  execOverrides {
    it.ignoreExitValue = true
//  it.workingDir = './node'
  }
}

task run(type: JavaExec, dependsOn: [ build, runNodeServer ], description: "Run it.") {
  main = 'adc.levelreader.main.LelandPrototype'   
  classpath project.configurations.default 
  classpath sourceSets.main.output.classesDir
}
