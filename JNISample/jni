#!/bin/bash
if [ "$JAVA_HOME" = "" ]
then
  JAVA_HOME=/opt/jdk/jdk1.8.0_112
fi
PATH=$JAVA_HOME/bin:$PATH
mkdir classes 2> /dev/null
echo \>\> Compiling Java
mkdir classes 2> /dev/null
javac -sourcepath ./src -d ./classes -classpath ./classes -g ./src/jnisample/HelloWorld.java
echo \>\> Running javah
javah -jni -cp ./classes -d C jnisample.HelloWorld
echo \>\> Here you should implement HelloWorld.c, including jnisample_HelloWorld.h, and compile it
cd C
echo \>\> Library must be named libHelloWorld.so and not only HelloWorld.so
echo \>\> Compiling C
RPI=`uname -a | grep arm`
if [ "$RPI" != "" ]
then
  # For Raspberry PI. -lwiringPi is not mandatory in this case...
  echo C compilation on the Raspberry PI
  g++ -Wall -shared -I$JAVA_HOME/include -I$JAVA_HOME/include/linux HelloWorld.c -lwiringPi -o libHelloWorld.so
else
  # For Linux Debian
  echo C Compilation on Linux \(Not Raspberry PI\)
  g++ -Wall -shared -fPIC -I$JAVA_HOME/include -I$JAVA_HOME/include/linux HelloWorld.c -o libHelloWorld.so
fi
cd ..
echo \>\> Now running the Java class invoking the native lib:
export LD_LIBRARY_PATH=./C
# ls -l $LD_LIBRARY_PATH/*.so
java -Djava.library.path=$LD_LIBRARY_PATH -cp ./classes jnisample.HelloWorld
echo \>\> Done.
